/* Import Google Font - Poppins with various weights */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');


/* CSS Variables - Defining color palette and common properties */
:root {
    --color-white: hsl(252, 30%, 100%);
    --color-light: hsl(252, 30%, 95%);
    --color-gray: hsl(252, 15%, 65%);
    --color-primary: hsl(252, 75%, 60%);
    --color-secondary: hsl(252, 100%, 90%);
    --color-success: hsl(120, 95%, 65%);
    --color-danger: hsl(0, 95%, 65%);
    --color-dark: hsl(252, 30%, 17%);
    --color-black: hsl(252, 30%, 10%);

    --border-radius: 2rem;
    --card-border-radius: 1rem;
    --btn-padding: 0.6rem 2rem;
    --search-padding: 0.6rem 1rem;
    --card-padding: 1rem;

    --sticky-top-left: 5.4rem
    --sticky-top-right: -18rem
}

/* Global Styles - Resetting default styles and applying box-sizing */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    border: 0;
    outline: 0;

    text-decoration: none;
    list-style: none;
}

/* Body Styling - Setting font, color, and background */
body {
    font-family: "Poppins", sans-serif;
    color: var(--color-dark);
    background: var(--color-light);
    overflow: hidden;
}

/* Container - Centering content and setting width */
.container {
    width: 80%;
    margin: 0 auto;
}

/* profile-picture - Circular profile image with overflow hidden */
.profile-picture {
    width: 2.7rem;

    /* Ensures the element maintains a 1:1 aspect ratio, making it a perfect square. 
    The width and height will always be equal, regardless of the specified dimensions. */
    aspect-ratio: 1/1;

    border-radius: 50%;
    overflow: hidden;
}

/* Image Styling - Ensuring images fill their container */
img {
    display: block;
    width: 100%;
}

/* Button Styling - Basic button styles with transition effect */
.btn {
    display: inline-block;
    padding: var(--btn-padding);
    font-size: 0.9rem;
    font-weight: 500;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 300ms ease;
}

/* Primary Button - Specific styling for primary buttons */
.btn.btn-primary {
    background: var(--color-primary);
    color: #fff;
}

/* Button Hover Effect - Slight opacity change on hover */
.btn:hover {
    opacity: 0.8;
}

.text-bold {
    font-weight: 500;
}

.text-muted {
    color: var(--color-gray);
}


/*************************** NAVBAR ***************************/

/* Navigation bar styling */
nav {
    width: 100%; /* Full width */
    background: var(--color-white);         /* Background color */
    padding: 0.7rem 0;                      /* Vertical padding */
    position: fixed;                        /* Fixed position at the top */
    top: 0;                                 /* Align to the top */
    z-index: 10;                            /* Ensure it stays above other content */
}

/* Container inside the navigation for layout */
nav .container {
    display: flex;                          /* Flexbox layout */
    align-items: center;                    /* Center items vertically */
    justify-content: space-between;         /* Space between items */
}

/* Search bar styling */
nav .search-bar {
    background: var(--color-light);         /* Background color */
    border-radius: var(--border-radius);    /* Rounded corners */
    padding: var(--search-padding);         /* Padding inside the search bar */
}

/* Search input field styling */
nav .search-bar input {
    background: transparent;                /* Transparent background */
    width: 30vw;                            /* Responsive width based on viewport width */
    margin-left: 1rem;                      /* Spacing between icon and input */
    font-size: 0.9rem;                      /* Font size */
    color: var(--color-dark);               /* Text color */
}

/* Placeholder text color for input */
nav .search-bar input::placeholder {
    color: var(--color-gray);               /* Placeholder text color */
}

/* Styling for the create button and profile picture section */
nav .create {
    display: flex;                          /* Flexbox layout */
    align-items: center;                    /* Center items vertically */
    gap: 2rem;                              /* Spacing between items */
}


/*************************** MAIN ***************************/

/* Main section of the page */
main {
    position: relative;                     /* Positions the main element relative to its normal position */
    top: 5.4rem;                            /* Moves the main element down by 5.4rem */
}

/* Container within the main section */
main .container {
    display: grid;                          /* Uses a grid layout for the container */
    grid-template-columns: 18vw auto 20vw;  /* Defines three columns with widths of 18vw, auto (remaining space), and 20vw respectively */
    column-gap: 2rem;                       /* Sets a 2rem gap between the grid columns */
    position: relative;                     /* Positions the container element relative to its normal position */
}


/*************************** LEFT ***************************/

/* Left section within the container */
main .container .left {
    height: max-content;                    /* Sets the height to fit the content */
    position: sticky;                       /* Makes the element stick in its position when scrolled */
    top: var(--sticky-top-left);            /* Sets the top position for the sticky element using a CSS variable */
}

/* Profile section within the left section */
main .container .left .profile {
    padding: var(--card-padding);               /* Adds padding inside the profile card using a CSS variable */
    background: var(--color-white);             /* Sets the background color of the profile card to white using a CSS variable */
    border-radius: var(--card-border-radius);   /* Rounds the corners of the profile card using a CSS variable */
    display: flex;                              /* Uses a flexbox layout for the profile card */
    align-items: center;                        /* Aligns the items in the center vertically within the flex container */
    column-gap: 1rem;                           /* Sets a 1rem gap between the flex items (columns) */
    width: 100%;                                /* Ensures the profile card takes up the full width of its container */
}


/*************************** SIDEBAR ***************************/

/* Sidebar section within the left section */
.left .sidebar {
    margin-top: 1rem;                           /* Adds a margin to the top of the sidebar */
    background: var(--color-white);             /* Sets the background color of the sidebar to white using a CSS variable */
    border-radius: var(--card-border-radius);   /* Rounds the corners of the sidebar using a CSS variable */
}

/* Individual menu items in the sidebar */
.left .sidebar .menu-item {
    display: flex;                              /* Uses a flexbox layout for the menu item */
    align-items: center;                        /* Vertically centers the items within the menu item */
    height: 4rem;                               /* Sets the height of each menu item to 4rem */
    cursor: pointer;                            /* Changes the cursor to a pointer when hovering over the menu item */
    transition: all 300ms ease;                 /* Applies a transition effect to all properties over 300ms with ease timing */
    position: relative;                         /* Positions the menu item relative to its normal position */
}

/* Hover effect for menu items */
.left .sidebar .menu-item:hover {
    background: var(--color-light);             /* Changes the background color on hover using a CSS variable */
}

/* Icons within the sidebar menu items */
.left .sidebar i {
    font-size: 1.4rem;                          /* Sets the font size of the icons */
    /* color: var(--color-gray); */             /* (Commented out) Sets the icon color using a CSS variable */
    margin-left: 2rem;                          /* Adds a left margin to the icons */
    position: relative;                         /* Positions the icon relative to its normal position */
}

/* Notification count indicator on icons */
.left .sidebar i .notification-count {
    background: var(--color-danger);            /* Sets the background color of the notification count using a CSS variable */
    color: #fff;                              /* Sets the text color to white */
    font-size: 0.7rem;                          /* Sets the font size of the notification count */
    width: fit-content;                         /* Sets the width to fit the content */
    border-radius: 0.8rem;                      /* Rounds the corners of the notification count */
    padding: 0.15rem 0.4rem;                    /* Adds padding inside the notification count */
    position: absolute;                         /* Positions the notification count absolutely within the icon */
    top: -0.3rem;                               /* Positions the notification count slightly above the icon */
    right: -0.6rem;                             /* Positions the notification count slightly to the right of the icon */
}

/* Heading text within the sidebar menu items */
.left .sidebar h3 {
    margin-left: 1.5rem;                        /* Adds a left margin to the heading */
    font-size: 1rem;                            /* Sets the font size of the heading */
}

/* Active menu item styling */
.left .sidebar .active {
    background: var(--color-light);             /* Changes the background color of the active menu item using a CSS variable */
}

/* Active menu item icon and heading styling */
.left .sidebar .active i, 
.left .sidebar .active h3 {
    color: var(--color-primary);                /* Changes the color of the icon and heading in the active menu item using a CSS variable */
}

/* Indicator for the active menu item */
.left .sidebar .active::before {
    content: "";                                /* Inserts an empty content block before the active menu item */
    display: block;                             /* Displays the block */
    width: 0.5rem;                              /* Sets the width of the indicator */
    height: 100%;                               /* Sets the height to 100% of the menu item */
    position: absolute;                         /* Positions the indicator absolutely within the menu item */
    background: var(--color-primary);           /* Sets the background color of the indicator using a CSS variable */
}

/* Rounded corners for the first active menu item */
.left .sidebar .menu-item:first-child.active {
    border-top-left-radius: var(--card-border-radius);      /* Rounds the top-left corner of the first active menu item */
    overflow: hidden;                                       /* Hides any overflow content */
}

/* Rounded corners for the last active menu item */
.left .sidebar .menu-item:last-child.active {
    border-bottom-left-radius: var(--card-border-radius);   /* Rounds the bottom-left corner of the last active menu item */
    overflow: hidden;                                       /* Hides any overflow content */
}

/* Button styling within the left section */
.left .btn {
    margin-top: 1rem;                                       /* Adds a margin to the top of the button */
    width: 100%;                                            /* Sets the button to take up 100% of the container's width */
    text-align: center;                                     /* Centers the button text */
    padding: 1rem 0;                                        /* Adds padding to the top and bottom of the button */
}


/********************** NOTIFICATION POPUP **********************/

/* Notifications popup within the left section */
.left .notifications-popup {
    position: absolute;                                     /* Absolutely positions the notifications popup relative to its container */
    top: 0;                                                 /* Aligns the popup at the top of its container */
    left: 110%;                                             /* Positions the popup slightly to the right outside its container */
    width: 30rem;                                           /* Sets the width of the popup */
    background: var(--color-white);                         /* Sets the background color to white using a CSS variable */
    border-radius: var(--card-border-radius);               /* Rounds the corners of the popup using a CSS variable */
    padding: var(--card-padding);                           /* Adds padding inside the popup using a CSS variable */
    box-shadow: 0 0 2rem hsl(var(--color-primary), 75%, 60% 25%);   /* Adds a shadow effect around the popup */
    z-index: 8;                                             /* Sets the stacking order above other elements */
    display: none;                                          /* Hides the popup by default */
}

/* Arrow indicator for the notifications popup */
.left .notifications-popup::before {
    content: "";                                            /* Inserts an empty content block to create the arrow */
    width: 2rem;                                            /* Sets the width of the arrow */
    height: 2rem;                                           /* Sets the height of the arrow */
    display: block;                                         /* Ensures the arrow is displayed as a block element */
    background: var(--color-white);                         /* Matches the background color to the popup */
    position: absolute;                                     /* Absolutely positions the arrow */
    left: -0.65rem;                                         /* Positions the arrow slightly to the left of the popup */
    transform: rotate(45deg);                               /* Rotates the arrow to create a diamond shape */
}

/* Layout for individual notification items */
.left .notifications-popup > div {
    display: flex;                                          /* Uses a flexbox layout for the notification items */
    align-items: start;                                     /* Aligns items at the start of the cross-axis (top) */
    gap: 1rem;                                              /* Adds a 1rem gap between flex items */
    margin-bottom: 1rem;                                    /* Adds a bottom margin to space out the notifications */
}

/* Small text within the notifications popup */
.left .notifications-popup small {
    display: block;                                         /* Ensures small text elements take up the full width of their container */
}


/*************************** MIDDLE ***************************/
/* ------------- STORIES ------------- */

/* Container for all story items */
.middle .stories {
    display: flex;                                          /* Uses flexbox for layout of story items */
    justify-content: space-between;                         /* Distributes space between story items */
    height: 12rem;                                          /* Sets a fixed height for the stories section */
    gap: 0.5rem;                                            /* Adds a gap between story items */
}

/* Individual story item */
.middle .stories .story {
    padding: var(--card-padding);                           /* Adds padding inside each story item */
    border-radius: var(--card-border-radius);               /* Rounds the corners of each story item */
    display: flex;                                          /* Uses flexbox for layout within each story item */
    flex-direction: column;                                 /* Arranges content in a column layout */
    justify-content: space-between;                         /* Distributes space between content inside each story item */
    align-items: center;                                    /* Centers content horizontally */
    color: #fff;                                          /* Sets the text color to white */
    font-size: 0.75rem;                                     /* Sets the font size for text inside story items */
    width: 100%;                                            /* Ensures each story item takes up the full width of its container */
    position: relative;                                     /* Positions story items relative to their normal position */
    overflow: hidden;                                       /* Hides any content that overflows the bounds of the story item */
}

/* Gradient overlay for story items */
.middle .stories .story::before {
    content: "";                                            /* Inserts an empty content block for overlay effect */
    display: block;                                         /* Displays the block element */
    width: 100%;                                            /* Sets the width of the overlay to match the story item */
    height: 5rem;                                           /* Sets the height of the overlay */
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.75));      /* Creates a gradient overlay from transparent to dark */
    position: absolute;                                     /* Absolutely positions the overlay within the story item */
    bottom: 0;                                              /* Aligns the overlay to the bottom of the story item */
}

/* Text inside story items */
.middle .stories .story .name {
    z-index: 2;                                             /* Ensures the text appears above the overlay */
}

/* Background images for each story item */
.middle .stories .story:nth-child(1) {
    background: url("./images/story-1.jpg") no-repeat center center/cover;
}

.middle .stories .story:nth-child(2) {
    background: url("./images/story-2.jpg") no-repeat center center/cover;
}

.middle .stories .story:nth-child(3) {
    background: url("./images/story-3.jpg") no-repeat center center/cover;
}

.middle .stories .story:nth-child(4) {
    background: url("./images/story-4.jpg") no-repeat center center/cover;
}

.middle .stories .story:nth-child(5) {
    background: url("./images/story-5.jpg") no-repeat center center/cover;
}

.middle .stories .story:nth-child(6) {
    background: url("./images/story-6.jpg") no-repeat center center/cover;
}

/* Profile picture styling within story items */
.middle .stories .profile-picture {
    width: 2rem;                                            /* Sets the width of the profile picture */
    height: 2rem;                                           /* Sets the height of the profile picture */
    align-self: flex-start;                                 /* Aligns the profile picture to the start of the story item */
    border: 3px solid var(--color-primary);                 /* Adds a border around the profile picture */
}
/* ------------- END OF STORIES ------------- */


/* ------------- CREATE POST ------------- */

/* Form for creating a new post */
.middle .create-post {
    width: 100%;                                            /* Ensures the create post form takes up the full width of its container */
    display: flex;                                          /* Uses flexbox for layout of the form content */
    align-items: center;                                    /* Aligns items in the center vertically */
    justify-content: space-between;                         /* Distributes space between items in the form */
    margin-top: 1rem;                                       /* Adds a top margin to separate the form from other content */
    background: var(--color-white);                         /* Sets the background color of the form to white */
    padding: 0.4rem var(--card-padding);                    /* Adds padding inside the form */
    border-radius: var(--border-radius);                    /* Rounds the corners of the form */
}

/* Text input field within the create post form */
.middle .create-post input[type="text"] {
    justify-self: start;                                    /* Aligns the text input field to the start of the form (flex container) */
    width: 100%;                                            /* Ensures the text input field takes up the full width of its container */
    background: transparent;                                /* Sets the background of the input field to transparent */
    color: var(--color-dark);                               /* Sets the text color inside the input field */
    margin-right: 1rem;                                     /* Adds a right margin to separate the input field from the submit button */
}
